<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Order Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #fefbf3;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 95%;
      margin: 1rem auto;
    }
    h1 {
      font-size: 1.5rem;
      margin: 0;
    }
    .top-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 0.75rem;
    }
    /* Table Setup */
    .table {
      table-layout: fixed;
      width: 100%;
      background-color: #fff;
    }
    .table-sm td, .table-sm th {
      padding: 0.5rem;
    }
    .table thead th {
      background-color: #ffcd00;
      color: #333;
      text-transform: uppercase;
      font-weight: 600;
      font-size: 0.85rem;
      border-color: #ccc;
    }
    .table-bordered td, .table-bordered th {
      border-color: #ccc;
    }
    /* Column Wrapping */
    td, th {
      word-break: break-word;
      white-space: pre-wrap;
      vertical-align: top;
    }
    /* Minimal spacing for line items */
    .line-item {
      margin-bottom: 0.25rem;
    }
    .line-item strong {
      font-size: 0.9rem;
    }
    /* Badge styling */
    .badge {
      font-size: 0.75rem;
    }
    /* Let very small screens scroll horizontally if needed */
    .table-responsive {
      margin-bottom: 1rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- TOP BAR -->
    <div class="top-bar">
      <h1>Order Dashboard</h1>
      <div>
        Logged in as: <strong><%= role %></strong> |
        <a href="/login">Logout</a>
      </div>
    </div>

    <% if (orders.length === 0) { %>
      <div class="alert alert-warning text-center">
        No orders to display.
      </div>
    <% } else { %>
      <div class="table-responsive">
        <table class="table table-sm table-bordered align-middle">
          <!-- Define column widths via colgroup -->
          <colgroup>
            <col style="width:7%;" />
            <col style="width:10%;" />
            <col style="width:55%;" />
            <col style="width:6%;" />
            <col style="width:22%;" />
          </colgroup>

          <thead>
            <tr>
              <th>Order ID</th>
              <th>Customer Info</th>
              <th>Order Details</th>
              <th>Delivery</th>
              <th>Feedback/Changes</th>
            </tr>
          </thead>
          <tbody>
            <% 
              // Example helper function for expected delivery
              function getExpectedDelivery(order) {
                // Insert your actual logic here
                return 'N/A';
              }
            %>

            <% orders.forEach(order => { %>
              <tr>
                <!-- ORDER ID -->
                <td>
                  <div style="font-weight:600;">#<%= order.name %></div>
                  <% if (order.fulfillment_status === 'fulfilled') { %>
                    <span class="badge bg-success">Fulfilled</span>
                  <% } else { %>
                    <span class="badge bg-warning text-dark">Unfulfilled</span>
                  <% } %>
                </td>

                <!-- CUSTOMER INFO -->
                <td>
                  <% if (order.customer) { %>
                    <%= order.customer.first_name %> <%= order.customer.last_name %><br/>
                    <small><%= order.customer.phone || '' %></small>
                  <% } else { %>
                    Guest
                  <% } %>
                </td>

                <!-- ORDER DETAILS (line items + properties) -->
                <td>
                  <% order.line_items.forEach(item => { %>
                    <div class="line-item">
                      <strong><%= item.title %></strong> Ã— <%= item.quantity %><br/>
                      <% if (item.properties && item.properties.length > 0) { %>
                        <% item.properties.forEach(prop => {
                            var propName = prop.name.toLowerCase();
                            var displayValue = prop.value;
                            var shouldHide = false;
                            // Hide confidential lines if viewer
                            if (propName.includes('form data')) {
                              if (role === 'viewer') {
                                var lines = displayValue.split('\n');
                                lines = lines.filter(function(line) {
                                  var lowerLine = line.toLowerCase();
                                  if (
                                    lowerLine.includes('whatsapp') ||
                                    lowerLine.includes('price') ||
                                    lowerLine.includes('song type') ||
                                    lowerLine.includes('uploaded images') ||
                                    lowerLine.includes('selected addons')
                                  ) {
                                    return false;
                                  }
                                  return true;
                                });
                                displayValue = lines.join('\n');
                              }
                            } else {
                              if (role === 'viewer') {
                                if (
                                  propName.includes('whatsapp') ||
                                  propName.includes('price') ||
                                  propName.includes('song type') ||
                                  propName.includes('uploaded images') ||
                                  propName.includes('selected addons')
                                ) {
                                  shouldHide = true;
                                }
                              }
                            }
                        %>
                          <% if (!shouldHide) { %>
                            <small><%= prop.name %>: <%= displayValue %></small><br/>
                          <% } %>
                        <% }); %>
                      <% } %>
                    </div>
                  <% }); %>
                </td>

                <!-- DELIVERY -->
                <td>
                  <%= getExpectedDelivery(order) %>
                </td>

                <!-- FEEDBACK/CHANGES -->
                <td>
                  <% if (role === 'admin') { %>
                    <input 
                      type="text"
                      class="form-control feedback-field"
                      value="<%= order.note || '' %>"
                      data-order-id="<%= order.id %>"
                    />
                  <% } else { %>
                    <p class="mb-0"><%= order.note && order.note.length ? order.note : 'No feedback provided.' %></p>
                  <% } %>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    <% } %>
  </div>

  <script>
    // Save feedback on blur if admin
    if ("<%= role %>" === "admin") {
      document.querySelectorAll('.feedback-field').forEach(field => {
        field.addEventListener('blur', function() {
          const orderId = this.getAttribute('data-order-id');
          const feedback = this.value;
          fetch('/update-feedback', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ orderId, feedback })
          })
          .then(response => response.json())
          .then(data => console.log("Feedback saved:", data))
          .catch(err => console.error("Error saving feedback:", err));
        });
      });
    }
  </script>
</body>
</html>
