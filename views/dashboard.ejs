<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Order Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #fefbf3;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0; 
      padding: 0;
    }
    .container {
      max-width: 95%;
      margin: 1rem auto;
    }
    .top-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 0.75rem;
    }
    .top-bar h1 {
      font-size: 1.5rem;
      margin: 0;
    }
    /* TABLE SETUP */
    .table {
      table-layout: fixed;
      width: 100%;
      background-color: #fff;
      margin-bottom: 0;
    }
    .table-sm td, .table-sm th {
      padding: 0.4rem;
      min-width: 0; /* Allow columns to shrink */
    }
    .table thead th {
      background-color: #ffcd00;
      color: #333;
      text-transform: uppercase;
      font-weight: 600;
      font-size: 0.85rem;
      border-color: #ccc;
    }
    .table-bordered td, .table-bordered th {
      border-color: #ccc;
    }
    td, th {
      white-space: pre-wrap;
      word-break: break-word;
      vertical-align: top;
      min-width: 0;
    }
    /* Set fixed percentages using colgroup in HTML */
    /* Minimal spacing for order details */
    .line-item {
      margin-bottom: 0.2rem;
      font-size: 0.9rem;
    }
    .line-item strong {
      font-size: 0.9rem;
    }
    .property-text {
      margin: 0;
      font-size: 0.85rem;
    }
    .badge {
      font-size: 0.75rem;
    }
    .table-responsive {
      margin-bottom: 1rem;
    }
    /* MOBILE ADJUSTMENTS */
    @media (max-width: 768px) {
      .table-sm td, .table-sm th {
        padding: 0.2rem;
        font-size: 0.75rem;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- TOP BAR -->
    <div class="top-bar">
      <h1>Order Dashboard</h1>
      <div>
        Logged in as: <strong><%= role %></strong> |
        <a href="/login">Logout</a>
      </div>
    </div>
    
    <% if (orders.length === 0) { %>
      <div class="alert alert-warning text-center">
        No orders to display.
      </div>
    <% } else { %>
      <div class="table-responsive">
        <table class="table table-sm table-bordered align-middle">
          <colgroup>
            <col style="width:7%;">
            <col style="width:10%;">
            <col style="width:55%;">
            <col style="width:6%;">
            <col style="width:22%;">
          </colgroup>
          <thead>
            <tr>
              <th>Order ID</th>
              <th>Customer Info</th>
              <th>Order Details</th>
              <th>Delivery</th>
              <th>Feedback/Changes</th>
            </tr>
          </thead>
          <tbody>
            <% 
              // Example helper function for expected delivery. Replace with your logic.
              function getExpectedDelivery(order) {
                return 'N/A';
              }
            %>
            <% orders.forEach(order => { %>
              <tr>
                <!-- ORDER ID: No extra hash -->
                <td>
                  <div style="font-weight:600;"><%= order.name %></div>
                  <% if (order.fulfillment_status === 'fulfilled') { %>
                    <span class="badge bg-success">Fulfilled</span>
                  <% } else { %>
                    <span class="badge bg-warning text-dark">Unfulfilled</span>
                  <% } %>
                </td>
                <!-- CUSTOMER INFO -->
                <td>
                  <% if (order.customer) { %>
                    <%= order.customer.first_name %> <%= order.customer.last_name %><br>
                    <small><%= order.customer.phone || '' %></small>
                  <% } else { %>
                    Guest
                  <% } %>
                </td>
                <!-- ORDER DETAILS: Minimal spacing -->
                <td>
                  <% order.line_items.forEach(item => { %>
                    <div class="line-item">
                      <strong><%= item.title %></strong> Ã— <%= item.quantity %>
                      <% if (item.properties && item.properties.length > 0) { %>
                        <div style="margin-left: 0.5rem; margin-top: 0.1rem;">
                          <% item.properties.forEach(prop => {
                               var propName = prop.name.toLowerCase();
                               var displayValue = prop.value;
                               var shouldHide = false;
                               if (propName.includes('form data')) {
                                 if (role === 'viewer') {
                                   var lines = displayValue.split('\n');
                                   lines = lines.filter(function(line) {
                                     var lowerLine = line.toLowerCase();
                                     if (
                                       lowerLine.includes('whatsapp') ||
                                       lowerLine.includes('price') ||
                                       lowerLine.includes('song type') ||
                                       lowerLine.includes('uploaded images') ||
                                       lowerLine.includes('selected addons')
                                     ) {
                                       return false;
                                     }
                                     return true;
                                   });
                                   displayValue = lines.join(' ');
                                 }
                               } else {
                                 if (role === 'viewer') {
                                   if (
                                     propName.includes('whatsapp') ||
                                     propName.includes('price') ||
                                     propName.includes('song type') ||
                                     propName.includes('uploaded images') ||
                                     propName.includes('selected addons')
                                   ) {
                                     shouldHide = true;
                                   }
                                 }
                               }
                          %>
                            <% if (!shouldHide) { %>
                              <div class="property-text">
                                <small><%= prop.name %>: <%= displayValue %></small>
                              </div>
                            <% } %>
                          <% }); %>
                        </div>
                      <% } %>
                    </div>
                  <% }); %>
                </td>
                <!-- DELIVERY -->
                <td>
                  <%= getExpectedDelivery(order) %>
                </td>
                <!-- FEEDBACK/CHANGES -->
                <td>
                  <% if (role === 'admin') { %>
                    <input type="text"
                           class="form-control feedback-field"
                           value="<%= order.note || '' %>"
                           data-order-id="<%= order.id %>">
                  <% } else { %>
                    <p class="mb-0"><%= order.note && order.note.length ? order.note : 'No feedback provided.' %></p>
                  <% } %>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    <% } %>
  </div>

  <script>
    // For admin users: save feedback on blur
    if ("<%= role %>" === "admin") {
      document.querySelectorAll('.feedback-field').forEach(field => {
        field.addEventListener('blur', function() {
          const orderId = this.getAttribute('data-order-id');
          const feedback = this.value;
          fetch('/update-feedback', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ orderId, feedback })
          })
          .then(response => response.json())
          .then(data => console.log("Feedback saved:", data))
          .catch(err => console.error("Error saving feedback:", err));
        });
      });
    }
  </script>
</body>
</html>
