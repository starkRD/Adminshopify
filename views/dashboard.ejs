<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Order Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <!-- Using Bootstrap for basic styling -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f7f9fc;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
    }
    /* Use a fluid container to span full width */
    .container-fluid {
      padding: 0 1rem;
    }
    .top-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin: 1rem 0;
    }
    .top-bar h1 {
      font-size: 1.75rem;
      margin: 0;
    }
    /* TABLE SETUP */
    .table {
      table-layout: fixed;
      width: 100%;
    }
    .table-sm td, .table-sm th {
      padding: 0.4rem;
      min-width: 0;
    }
    .table thead th {
      background-color: #ffcd00;
      color: #333;
      text-transform: uppercase;
      font-weight: 600;
      font-size: 0.85rem;
      border-bottom: 1px solid #ccc;
    }
    /* Remove outer borders for a full-width, "flat" look */
    .table-bordered {
      border: none;
    }
    td, th {
      white-space: pre-wrap;
      word-break: break-word;
      vertical-align: top;
      min-width: 0;
    }
    /* Fixed column widths via colgroup */
    /* 7% / 10% / 55% / 6% / 22% */
    /* Minimal spacing for line items */
    .line-item {
      margin-bottom: 0.2rem;
      font-size: 0.9rem;
    }
    .line-item strong {
      font-size: 0.9rem;
    }
    .property-text {
      margin: 0;
      font-size: 0.85rem;
    }
    .badge {
      font-size: 0.75rem;
    }
    /* Ensure no extra box styling */
    .table-striped tbody tr:nth-of-type(odd) {
      background-color: #fafafa;
    }
    /* Responsive: on very small screens, allow horizontal scroll */
    .table-responsive {
      margin-bottom: 1rem;
    }
  </style>
</head>
<body class="bg-light">
  <div class="container-fluid">
    <!-- TOP BAR -->
    <div class="top-bar">
      <h1>Order Dashboard</h1>
      <div>
        Logged in as: <strong><%= role %></strong> | <a href="/login">Logout</a>
      </div>
    </div>

    <% if (orders.length === 0) { %>
      <div class="alert alert-warning text-center">
        No orders to display.
      </div>
    <% } else { %>
      <div class="table-responsive">
        <table class="table table-sm table-striped align-middle">
          <!-- Use colgroup to enforce percentages -->
          <colgroup>
            <col style="width:7%;">
            <col style="width:10%;">
            <col style="width:55%;">
            <col style="width:6%;">
            <col style="width:22%;">
          </colgroup>
          <thead>
            <tr>
              <th>Order Number</th>
              <th>Customer Info</th>
              <th>Order Details</th>
              <th>Expected Delivery</th>
              <th>Feedback/Changes</th>
            </tr>
          </thead>
          <tbody>
            <% 
              // Example helper function for expected delivery; replace with actual logic if needed.
              function getExpectedDelivery(order) {
                var timelines = [
                  { name: "Basic", ids: ["41290369269835"], hours: 240 },
                  { name: "Standard", ids: ["41290369302603", "41274164510795"], hours: 120 },
                  { name: "Premium", ids: ["41290369335371"], hours: 30 },
                  { name: "Beast", ids: ["41290369368139"], hours: 30 },
                  { name: "FAST", ids: ["41274164543563"], hours: 48 },
                  { name: "EXPRESS", ids: ["41274164576331"], hours: 24 }
                ];
                var matchedHours = [];
                order.line_items.forEach(function(item) {
                  var variantId = String(item.variant_id);
                  timelines.forEach(function(timeline) {
                    if(timeline.ids.indexOf(variantId) !== -1) {
                      matchedHours.push(timeline.hours);
                    }
                  });
                });
                if(matchedHours.length > 0) {
                  return new Date(order.created_at).getTime() + (Math.min.apply(null, matchedHours) * 60 * 60 * 1000);
                }
                return new Date(order.created_at).getTime() + (240 * 60 * 60 * 1000);
              }
              function formatDate(timestamp) {
                return new Date(timestamp).toLocaleDateString("en-IN", {
                  timeZone: "Asia/Kolkata",
                  year: "numeric",
                  month: "short",
                  day: "numeric"
                });
              }
            %>
            <% orders.forEach(function(order) { %>
              <tr>
                <!-- Order Number (no extra hash) -->
                <td>
                  <div style="font-weight:600;"><%= order.name %></div>
                  <% if (order.fulfillment_status === 'fulfilled') { %>
                    <span class="badge bg-success">Fulfilled</span>
                  <% } else { %>
                    <span class="badge bg-warning text-dark">Unfulfilled</span>
                  <% } %>
                </td>

                <!-- Customer Info -->
                <td>
                  <% if (order.customer) { %>
                    <%= order.customer.first_name %> <%= order.customer.last_name %><br>
                    <small><%= order.customer.phone || '' %></small>
                  <% } else { %>
                    Guest
                  <% } %>
                </td>

                <!-- Order Details (with minimal gaps) -->
                <td>
                  <% order.line_items.forEach(function(item) { %>
                    <div class="line-item">
                      <strong><%= item.title %></strong> &times; <%= item.quantity %>
                      <% if (item.properties && item.properties.length > 0) { %>
                        <div style="margin-left: 0.4rem; margin-top: 0.1rem;">
                          <% item.properties.forEach(function(prop) {
                               var propName = prop.name.toLowerCase();
                               var displayValue = prop.value;
                               var shouldHide = false;
                               if (propName.includes('form data')) {
                                 if (role === 'viewer') {
                                   var lines = displayValue.split('\n');
                                   lines = lines.filter(function(line) {
                                     var lowerLine = line.toLowerCase();
                                     if (
                                       lowerLine.includes('whatsapp') ||
                                       lowerLine.includes('price') ||
                                       lowerLine.includes('song type') ||
                                       lowerLine.includes('uploaded images') ||
                                       lowerLine.includes('selected addons')
                                     ) {
                                       return false;
                                     }
                                     return true;
                                   });
                                   displayValue = lines.join(' ');
                                 }
                               } else {
                                 if (role === 'viewer') {
                                   if (
                                     propName.includes('whatsapp') ||
                                     propName.includes('price') ||
                                     propName.includes('song type') ||
                                     propName.includes('uploaded images') ||
                                     propName.includes('selected addons')
                                   ) {
                                     shouldHide = true;
                                   }
                                 }
                               }
                          %>
                            <% if (!shouldHide) { %>
                              <div class="property-text">
                                <small><%= prop.name %>: <%= displayValue %></small>
                              </div>
                            <% } %>
                          <% }); %>
                        </div>
                      <% } %>
                    </div>
                  <% }); %>
                </td>

                <!-- Expected Delivery -->
                <td>
                  <%= formatDate(getExpectedDelivery(order)) %>
                </td>

                <!-- Feedback/Changes -->
                <td>
                  <% if (role === 'admin') { %>
                    <input type="text" value="<%= order.note || '' %>" data-order-id="<%= order.id %>" class="feedback-field form-control">
                  <% } else { %>
                    <input type="text" value="<%= order.note || '' %>" class="form-control" readonly>
                  <% } %>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    <% } %>
  </div>

  <script>
    if ("<%= role %>" === "admin") {
      document.querySelectorAll('.feedback-field').forEach(field => {
        field.addEventListener('blur', function() {
          const orderId = this.getAttribute('data-order-id');
          const feedback = this.value;
          fetch('/update-feedback', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ orderId, feedback })
          })
          .then(response => response.json())
          .then(data => console.log("Feedback saved:", data))
          .catch(err => console.error("Error saving feedback:", err));
        });
      });
    }
  </script>
</body>
</html>
