<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Dashboard</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        h1 {
            margin-bottom: 20px;
        }
        .container {
            max-width: 100%;
            overflow-x: auto;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
        }
        th, td {
            padding: 8px;
            text-align: left;
            vertical-align: top;
            border: 1px solid #ddd;
            word-wrap: break-word;
            overflow-wrap: break-word;
        }
        th {
            background-color: #333;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .order-details {
            width: 100%;
            max-width: 800px;
        }
        
        /* Set column widths */
        .col-number {
            width: 80px;
        }
        .col-customer {
            width: 150px;
        }
        .col-details {
            width: auto;
        }
        .col-delivery {
            width: 100px;
        }
        .col-feedback {
            width: 150px;
        }
        
        /* Admin/viewer specific styling */
        .admin-view .col-details {
            width: auto;
        }
        .viewer-view .col-details {
            width: 60%;
        }
        
        /* For smaller screens */
        @media (max-width: 768px) {
            th, td {
                padding: 5px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <h1>Order Dashboard</h1>
    <p>Logged in as: <%= role %> | <a href="/logout">Logout</a></p>
    
    <div class="container <%= role === 'admin' ? 'admin-view' : 'viewer-view' %>">
        <table>
            <thead>
                <tr>
                    <th class="col-number">Order Number</th>
                    <th class="col-customer">Customer Info</th>
                    <th class="col-details">Order Details</th>
                    <% if (role !== 'admin') { %>
                        <th class="col-delivery">Expected Delivery</th>
                        <th class="col-feedback">Feedback/Changes</th>
                    <% } %>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <tr>
                        <td class="col-number">#<%= order.order_number || order.name %></td>
                        <td class="col-customer"><%= order.customer ? order.customer.first_name + ' ' + order.customer.last_name : 'N/A' %></td>
                        <td class="col-details">
                            <% 
                            // Extract data from line items
                            let songDetails = '';
                            let deliveryDate = '';
                            
                            if (order.line_items && order.line_items.length > 0) {
                                // Get the product title from the first line item
                                songDetails += '<strong>' + order.line_items[0].title + '</strong><br>';
                                
                                // Extract form data
                                let formData = '';
                                let language = '';
                                let details = {};
                                
                                order.line_items.forEach(item => {
                                    if (item.properties && item.properties.length > 0) {
                                        item.properties.forEach(prop => {
                                            if (prop.name === 'Form Data' || prop.name.includes('Form Data')) {
                                                formData = prop.value;
                                            } else {
                                                // Store other properties
                                                details[prop.name] = prop.value;
                                                if (prop.name.toLowerCase() === 'language') {
                                                    language = prop.value;
                                                }
                                            }
                                        });
                                    }
                                });
                                
                                // If we have form data, display it
                                if (formData) {
                                    songDetails += formData.split('\n').join('<br>');
                                } else {
                                    // Otherwise display individual properties
                                    for (const [key, value] of Object.entries(details)) {
                                        songDetails += '<strong>' + key + ':</strong> ' + value + '<br>';
                                    }
                                }
                                
                                // Calculate delivery date (you can adjust this based on your business logic)
                                if (details['Delivery Time'] && details['Delivery Time'].includes('5-7 Days')) {
                                    const orderDate = new Date(order.created_at);
                                    const deliveryDateObj = new Date(orderDate);
                                    deliveryDateObj.setDate(orderDate.getDate() + 7);
                                    
                                    // Format date to display
                                    const options = { weekday: 'short', month: 'short', day: '2-digit', year: 'numeric' };
                                    deliveryDate = deliveryDateObj.toLocaleDateString('en-US', options);
                                }
                            }
                            %>
                            <%- songDetails %>
                        </td>
                        <% if (role !== 'admin') { %>
                            <td class="col-delivery"><%= deliveryDate || 'N/A' %></td>
                            <td class="col-feedback">
                                <% if (role === 'admin') { %>
                                    <textarea id="feedback-<%= order.id %>" rows="3" style="width: 100%;"></textarea>
                                    <button onclick="saveFeedback('<%= order.id %>')">Save</button>
                                <% } else { %>
                                    <!-- For viewers, just display feedback if available -->
                                    <div id="feedback-display-<%= order.id %>"></div>
                                <% } %>
                            </td>
                        <% } %>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <% if (role === 'admin') { %>
    <script>
        function saveFeedback(orderId) {
            const feedback = document.getElementById(`feedback-${orderId}`).value;
            fetch('/update-feedback', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, feedback }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    alert('Feedback saved successfully');
                } else {
                    alert('Error saving feedback');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error saving feedback');
            });
        }
    </script>
    <% } %>
</body>
</html>
